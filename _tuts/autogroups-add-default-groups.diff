diff --git a/src/Serializer/AdminGroupsContextBuilder.php b/src/Serializer/AdminGroupsContextBuilder.php
index 3ccdf26..06db65b 100644
--- a/src/Serializer/AdminGroupsContextBuilder.php
+++ b/src/Serializer/AdminGroupsContextBuilder.php
@@ -21,12 +21,44 @@ final class AdminGroupsContextBuilder implements SerializerContextBuilderInterfa
     {
         $context = $this->decorated->createFromRequest($request, $normalization, $extractedAttributes);
 
+        $context['groups'] = $context['groups'] ?? [];
+        $context['groups'] = array_merge($context['groups'], $this->addDefaultGroups($context, $normalization));
+
         $isAdmin = $this->authorizationChecker->isGranted('ROLE_ADMIN');
 
-        if (isset($context['groups']) && $isAdmin) {
+        if ($isAdmin) {
             $context['groups'][] = $normalization ? 'admin:read' : 'admin:write';
         }
 
+        $context['groups'] = array_unique($context['groups']);
+
         return $context;
     }
+
+    private function addDefaultGroups(array $context, bool $normalization)
+    {
+        $resourceClass = $context['resource_class'] ?? null;
+
+        if (!$resourceClass) {
+            return;
+        }
+
+        $shortName = (new \ReflectionClass($resourceClass))->getShortName();
+        $classAlias = strtolower(preg_replace('/[A-Z]/', '_\\0', lcfirst($shortName)));
+        $readOrWrite = $normalization ? 'read' : 'write';
+        $itemOrCollection = $context['operation_type'];
+        $operationName = $itemOrCollection === 'item' ? $context['item_operation_name'] : $context['collection_operation_name'];
+
+        return [
+            // {class}:{read/write}
+            // e.g. user:read
+            sprintf('%s:%s', $classAlias, $readOrWrite),
+            // {class}:{item/collection}:{read/write}
+            // e.g. user:collection:read
+            sprintf('%s:%s:%s', $classAlias, $itemOrCollection, $readOrWrite),
+            // {class}:{item/collection}:{operationName}
+            // e.g. user:collection:get
+            sprintf('%s:%s:%s', $classAlias, $itemOrCollection, $operationName),
+        ];
+    }
 }
