diff --git a/README.md b/README.md
index f95cc0bd1..d7837e5ee 100644
--- a/README.md
+++ b/README.md
@@ -77,6 +77,7 @@ To actually *create* the database and get some tables, run:
 ```
 symfony console doctrine:database:create
 symfony console doctrine:migrations:migrate
+symfony console doctrine:fixtures:load
 ```
 
 This uses the `symfony` binary, but `symfony console` is identical
diff --git a/src/DataFixtures/AppFixtures.php b/src/DataFixtures/AppFixtures.php
index 6c20526f4..4c7175c45 100644
--- a/src/DataFixtures/AppFixtures.php
+++ b/src/DataFixtures/AppFixtures.php
@@ -2,15 +2,42 @@
 
 namespace App\DataFixtures;
 
+use App\Entity\CheeseListing;
+use App\Entity\User;
 use Doctrine\Bundle\FixturesBundle\Fixture;
 use Doctrine\Persistence\ObjectManager;
+use Symfony\Component\Security\Core\Encoder\UserPasswordEncoderInterface;
 
 class AppFixtures extends Fixture
 {
+    private $passwordEncoder;
+
+    public function __construct(UserPasswordEncoderInterface $passwordEncoder)
+    {
+        $this->passwordEncoder = $passwordEncoder;
+    }
+
     public function load(ObjectManager $manager)
     {
-        // $product = new Product();
-        // $manager->persist($product);
+        $user = new User();
+        $user->setEmail('cheesefan@example.com');
+        $user->setUsername('cheesefan');
+        $user->setPassword($this->passwordEncoder->encodePassword($user, 'cheese'));
+        $manager->persist($user);
+
+        $listing1 = new CheeseListing('Mysterious munster');
+        $listing1->setDescription('Origin date: unknown. Actual origin... also unknown.');
+        $listing1->setPrice(1500);
+        $listing1->setOwner($user);
+        $listing1->setIsPublished(true);
+        $manager->persist($listing1);
+
+        $listing2 = new CheeseListing('Block of cheddar the size of your face!');
+        $listing2->setDescription('When I drive it to your house, it will sit in the passenger seat of my car.');
+        $listing2->setPrice(5000);
+        $listing2->setOwner($user);
+        $listing2->setIsPublished(true);
+        $manager->persist($listing2);
 
         $manager->flush();
     }
