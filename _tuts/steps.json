{
    "steps": [
        {
            "id": "start",
            "name": "start",
            "description": null
        },
        {
            "id": "installation-require-api",
            "name": "Installation: require api",
            "description": null
        },
        {
            "id": "installation-upgrade-doctrine-annotations",
            "name": "Installation: upgrade doctrine\/annotations",
            "description": null
        },
        {
            "id": "installation-configure-db",
            "name": "Installation: configure db",
            "description": null
        },
        {
            "id": "first-resource-install-maker",
            "name": "First Resource: install maker",
            "description": null
        },
        {
            "id": "first-resource-make-entity",
            "name": "First Resource: make:entity",
            "description": null
        },
        {
            "id": "first-resource-install-migrations",
            "name": "First Resource: install migrations",
            "description": null
        },
        {
            "id": "first-resource-make-migration",
            "name": "First Resource: Make migration",
            "description": null
        },
        {
            "id": "hydra-add-var-description",
            "name": "Hydra: Add @var description",
            "description": null
        },
        {
            "id": "profiler-install-debug",
            "name": "Profiler: install debug",
            "description": null
        },
        {
            "id": "operations-configure-to-use-all",
            "name": "Operations: configure to use all",
            "description": null
        },
        {
            "id": "operations-remove-delete-operation",
            "name": "Operations: remove delete operation",
            "description": null
        },
        {
            "id": "operations-configure-shortname",
            "name": "Operations: configure shortName",
            "description": null
        },
        {
            "id": "operations-show-expanded-operation",
            "name": "Operations: show expanded operation",
            "description": null
        },
        {
            "id": "operations-remove-extra-config",
            "name": "Operations: remove extra config",
            "description": null
        },
        {
            "id": "serialization-add-settextdescription",
            "name": "Serialization: Add setTextDescription()",
            "description": null
        },
        {
            "id": "serialization-remove-setdescription",
            "name": "Serialization: remove setDescription()",
            "description": null
        },
        {
            "id": "serialization-remove-setcreatedat",
            "name": "Serialization: remove setCreatedAt()",
            "description": null
        },
        {
            "id": "serialization-install-carbon",
            "name": "Serialization: Install carbon",
            "description": null
        },
        {
            "id": "serialization-getcreatedatago",
            "name": "Serialization: getCreatedAtAgo()",
            "description": null
        },
        {
            "id": "groups-add-normalization-group",
            "name": "Groups: Add normalization group",
            "description": null
        },
        {
            "id": "groups-add-read-group-to-some-props",
            "name": "Groups: add read group to some props",
            "description": null
        },
        {
            "id": "groups-add-denormalization-group",
            "name": "Groups: add denormalization group",
            "description": null
        },
        {
            "id": "groups-add-write-group-to-props",
            "name": "Groups: add write group to props",
            "description": null
        },
        {
            "id": "groups-name-swagger-models",
            "name": "Groups: Name swagger models",
            "description": null
        },
        {
            "id": "groups-add-read-to-getcreatedatago",
            "name": "Groups: add read to getCreatedAtAgo",
            "description": null
        },
        {
            "id": "groups-add-phpdoc-above-method",
            "name": "Groups: Add phpdoc above method",
            "description": null
        },
        {
            "id": "groups-add-settextdescription-to-write-group",
            "name": "Groups: Add setTextDescription to write group",
            "description": null
        },
        {
            "id": "groups-re-add-setdescription",
            "name": "Groups: Re-add setDescription()",
            "description": null
        },
        {
            "id": "groups-default-ispublished",
            "name": "Groups: default isPublished",
            "description": null
        },
        {
            "id": "serializetricks-serializedname",
            "name": "SerializeTricks: @SerializedName",
            "description": null
        },
        {
            "id": "serializetricks-constructor",
            "name": "SerializeTricks: constructor",
            "description": null
        },
        {
            "id": "serializetricks-change-arg-name",
            "name": "SerializeTricks: change arg name",
            "description": null
        },
        {
            "id": "serializetricks-change-back",
            "name": "SerializeTricks: change back",
            "description": null
        },
        {
            "id": "serializetricks-make-optional",
            "name": "SerializeTricks: make optional",
            "description": null
        },
        {
            "id": "filter-add-booleanfilter",
            "name": "Filter: add BooleanFilter",
            "description": null
        },
        {
            "id": "filter-add-missing-use",
            "name": "Filter: add missing use",
            "description": null
        },
        {
            "id": "filter-add-searchfilter",
            "name": "Filter: Add SearchFilter",
            "description": null
        },
        {
            "id": "filter-add-2nd-field-to-searchfilter",
            "name": "Filter: Add 2nd field to SearchFilter",
            "description": null
        },
        {
            "id": "filter-add-rangefilter",
            "name": "Filter: Add RangeFilter",
            "description": null
        },
        {
            "id": "filter-add-getshortdescription",
            "name": "Filter: Add getShortDescription()",
            "description": null
        },
        {
            "id": "filter-add-propertyfilter",
            "name": "Filter: Add PropertyFilter",
            "description": null
        },
        {
            "id": "pagination-add-pagination-items-per-page",
            "name": "Pagination: Add pagination_items_per_page",
            "description": null
        },
        {
            "id": "formats-paste-formats-config",
            "name": "Formats: paste formats config",
            "description": null
        },
        {
            "id": "formats-add-hal",
            "name": "Formats: Add hal",
            "description": null
        },
        {
            "id": "formats-add-csv-to-resource",
            "name": "Formats: Add CSV to resource",
            "description": null
        },
        {
            "id": "validation-add-basic-constraints",
            "name": "Validation: Add basic constraints",
            "description": null
        },
        {
            "id": "user-make-user",
            "name": "User: make:user",
            "description": null
        },
        {
            "id": "user-make-entity-add-username",
            "name": "User: make:entity add username",
            "description": null
        },
        {
            "id": "user-fix-getusername",
            "name": "User: fix getUsername",
            "description": null
        },
        {
            "id": "user-make-username-unique",
            "name": "User: make username unique",
            "description": null
        },
        {
            "id": "user-make-migration",
            "name": "User: make:migration",
            "description": null
        },
        {
            "id": "user-make-apiresource",
            "name": "User: make ApiResource",
            "description": null
        },
        {
            "id": "user-add-serialization-groups",
            "name": "User: Add serialization groups",
            "description": null
        },
        {
            "id": "user-add-validation",
            "name": "User: Add validation",
            "description": null
        },
        {
            "id": "relation-add-cheeselisting-owner",
            "name": "Relation: add CheeseListing.owner",
            "description": null
        },
        {
            "id": "relation-make-migration",
            "name": "Relation: make:migration",
            "description": null
        },
        {
            "id": "relation-expose-cheeselisting-owner",
            "name": "Relation: expose CheeseListing.owner",
            "description": null
        },
        {
            "id": "relation-expose-user-cheeselistings",
            "name": "Relation: Expose User.cheeseListings",
            "description": null
        },
        {
            "id": "relation-embed-user-cheeselistings",
            "name": "Relation: Embed User.cheeseListings",
            "description": null
        },
        {
            "id": "relation-embed-cheeselisting-owner",
            "name": "Relation: embed CheeseListing.owner",
            "description": null
        },
        {
            "id": "relation-only-embed-on-get-item",
            "name": "Relation: only embed on GET item",
            "description": null
        },
        {
            "id": "relation-allow-embedded-write",
            "name": "Relation: allow embedded write",
            "description": null
        },
        {
            "id": "relation-valid-on-cl-owner",
            "name": "Relation: @Valid on CL.owner",
            "description": null
        },
        {
            "id": "relation-set-items-on-collection",
            "name": "Relation: set items on collection",
            "description": null
        },
        {
            "id": "relation-add-new-cl-to-new-user",
            "name": "Relation: add new CL to new User",
            "description": null
        },
        {
            "id": "relation-add-valid-annotation",
            "name": "Relation: Add @Valid annotation",
            "description": null
        },
        {
            "id": "relation-add-orphanremoval",
            "name": "Relation: add orphanRemoval",
            "description": null
        },
        {
            "id": "relation-propertyfilter-on-relation",
            "name": "Relation: PropertyFilter on relation",
            "description": null
        },
        {
            "id": "relationfilter-use-multiple-lines",
            "name": "RelationFilter: use multiple lines",
            "description": null
        },
        {
            "id": "relationfilter-filter-on-cheeselisting-owner",
            "name": "RelationFilter: filter on CheeseListing.owner",
            "description": null
        },
        {
            "id": "relationfilter-filter-on-owner-username",
            "name": "RelationFilter: filter on owner.username",
            "description": null
        },
        {
            "id": "subresource-user-cheeselistings",
            "name": "Subresource: User.cheeseListings",
            "description": null
        },
        {
            "id": "subresource-remove-it",
            "name": "Subresource: remove it",
            "description": null
        },
        {
            "id": "pre-ep2-upgrade-dependencies",
            "name": "Pre Ep2: upgrade dependencies",
            "description": null
        },
        {
            "id": "pre-ep2-updating-recipe",
            "name": "Pre Ep2: updating recipe",
            "description": null
        },
        {
            "id": "pre-ep2-using-auto-encoder",
            "name": "Pre Ep2: using \"auto\" encoder",
            "description": null
        },
        {
            "id": "pre-ep2-add-test-stuff-to-tutorial",
            "name": "Pre Ep2: Add test stuff to tutorial\/",
            "description": null
        },
        {
            "id": "pre-ep2-tweaking-test-dir",
            "name": "Pre Ep2: tweaking Test dir",
            "description": null
        },
        {
            "id": "pre-ep2-install-encore",
            "name": "Pre Ep2: Install encore",
            "description": null
        },
        {
            "id": "pre-ep2-create-entire-vue-frontend",
            "name": "Pre Ep2: create entire vue frontend",
            "description": null
        },
        {
            "id": "swagger-disable-docs",
            "name": "Swagger: disable docs",
            "description": null
        },
        {
            "id": "swagger-disable-entrypoint",
            "name": "Swagger: disable entrypoint",
            "description": null
        },
        {
            "id": "swagger-disable-in-prod",
            "name": "Swagger: disable in prod",
            "description": null
        },
        {
            "id": "swagger-undo-that",
            "name": "Swagger: undo that",
            "description": null
        },
        {
            "id": "jsonlogin-json-login-simple-controller",
            "name": "JsonLogin: json_login + simple controller",
            "description": null
        },
        {
            "id": "jsonlogin-login-ajax-request",
            "name": "JsonLogin: Login AJAX request",
            "description": null
        },
        {
            "id": "jsonlogin-handle-auth-error",
            "name": "JsonLogin: Handle auth error",
            "description": null
        },
        {
            "id": "jsonlogin-show-bad-content-type-header",
            "name": "JsonLogin: show bad content-type header",
            "description": null
        },
        {
            "id": "jsonlogin-error-on-bad-content-type-header",
            "name": "JsonLogin: error on bad Content-Type header",
            "description": null
        },
        {
            "id": "jsonlogin-fix-content-type",
            "name": "JsonLogin: fix Content-Type",
            "description": null
        },
        {
            "id": "jsonlogin-return-location-header-on-success",
            "name": "JsonLogin: return Location header on success",
            "description": null
        },
        {
            "id": "jsonlogin-emitting-vue-authenticated",
            "name": "JsonLogin: emitting Vue authenticated",
            "description": null
        },
        {
            "id": "logout-add-logout-handler",
            "name": "Logout: add logout handler",
            "description": null
        },
        {
            "id": "user-pass-initial-user-from-twig",
            "name": "User: pass initial user from Twig",
            "description": null
        },
        {
            "id": "security-set-collectionoperations",
            "name": "Security: set collectionOperations",
            "description": null
        },
        {
            "id": "security-post-requires-role-user",
            "name": "Security: POST requires ROLE_USER",
            "description": null
        },
        {
            "id": "security-protect-item-operations",
            "name": "Security: protect item operations",
            "description": null
        },
        {
            "id": "test-install-simple-phpunit",
            "name": "Test: install simple-phpunit",
            "description": null
        },
        {
            "id": "test-use-phpunit-8",
            "name": "Test: use PHPUnit 8",
            "description": null
        },
        {
            "id": "test-override-database-url",
            "name": "Test: override DATABASE_URL",
            "description": null
        },
        {
            "id": "test-copy-in-test-directory",
            "name": "Test: copy in Test directory",
            "description": null
        },
        {
            "id": "test-add-test-service",
            "name": "Test: add test service",
            "description": null
        },
        {
            "id": "test-first-simple-test",
            "name": "Test: First simple test",
            "description": null
        },
        {
            "id": "test-test-for-401",
            "name": "Test: test for 401",
            "description": null
        },
        {
            "id": "test-install-http-client",
            "name": "Test: install http-client",
            "description": null
        },
        {
            "id": "test-add-content-type",
            "name": "Test: add Content-Type",
            "description": null
        },
        {
            "id": "test-send-valid-json",
            "name": "Test: send valid JSON",
            "description": null
        },
        {
            "id": "test-create-user-log-in",
            "name": "Test: create user & log in",
            "description": null
        },
        {
            "id": "test-install-alicebundle",
            "name": "Test: install AliceBundle",
            "description": null
        },
        {
            "id": "test-use-reloaddatabasetrait",
            "name": "Test: Use ReloadDatabaseTrait",
            "description": null
        },
        {
            "id": "test-install-monolog-bundle",
            "name": "Test: install monolog-bundle",
            "description": null
        },
        {
            "id": "test-add-customapitestcase-base-class",
            "name": "Test: Add CustomApiTestCase base class",
            "description": null
        },
        {
            "id": "test-encode-password",
            "name": "Test: encode password",
            "description": null
        },
        {
            "id": "test-add-createuserandlogin",
            "name": "Test: add createUserAndLogIn()",
            "description": null
        },
        {
            "id": "test-assert-auth-success-with-400",
            "name": "Test: Assert auth success with 400",
            "description": null
        },
        {
            "id": "test-remove-extra-content-type",
            "name": "Test: remove extra Content-Type",
            "description": null
        },
        {
            "id": "test-add-put-test",
            "name": "Test: Add put test",
            "description": null
        },
        {
            "id": "test-put-403-on-wrong-user",
            "name": "Test: PUT 403 on wrong user",
            "description": null
        },
        {
            "id": "security-only-allow-owners-to-put",
            "name": "Security: only allow owners to PUT",
            "description": null
        },
        {
            "id": "security-access-control-message",
            "name": "Security: access_control_message",
            "description": null
        },
        {
            "id": "security-remove-debug-code",
            "name": "Security: remove debug code",
            "description": null
        },
        {
            "id": "security-test-for-reassigning-owner",
            "name": "Security: test for reassigning owner",
            "description": null
        },
        {
            "id": "security-show-previous-object",
            "name": "Security: show previous_object",
            "description": null
        },
        {
            "id": "security-access-control-for-user",
            "name": "Security: access_control for User",
            "description": null
        },
        {
            "id": "security-use-top-level-access-control",
            "name": "Security: use top-level access_control",
            "description": null
        },
        {
            "id": "voter-make-voter",
            "name": "Voter: make:voter",
            "description": null
        },
        {
            "id": "voter-add-edit-case",
            "name": "Voter: add EDIT case",
            "description": null
        },
        {
            "id": "voter-exception-on-edge-case",
            "name": "Voter: exception on edge case",
            "description": null
        },
        {
            "id": "voter-check-for-role-admin",
            "name": "Voter: check for ROLE_ADMIN",
            "description": null
        },
        {
            "id": "encoding-test-for-user-registration",
            "name": "Encoding: test for user registration",
            "description": null
        },
        {
            "id": "encoding-add-plainpassword-field",
            "name": "Encoding: Add plainPassword field",
            "description": null
        },
        {
            "id": "encoding-remove-password-from-group",
            "name": "Encoding: remove password from group",
            "description": null
        },
        {
            "id": "encoding-customize-getter-setter",
            "name": "Encoding: customize getter\/setter",
            "description": null
        },
        {
            "id": "encoding-erasecredentials",
            "name": "Encoding: eraseCredentials()",
            "description": null
        },
        {
            "id": "encoding-bootstrap-data-persister",
            "name": "Encoding: Bootstrap data persister",
            "description": null
        },
        {
            "id": "encoding-use-entity-manager",
            "name": "Encoding: use entity manager",
            "description": null
        },
        {
            "id": "encoding-encode-password",
            "name": "Encoding: encode password",
            "description": null
        },
        {
            "id": "encoding-rename-field-to-password",
            "name": "Encoding: rename field to password",
            "description": null
        },
        {
            "id": "validationgroups-plainpassword-notblank",
            "name": "ValidationGroups: plainPassword NotBlank",
            "description": null
        },
        {
            "id": "validationgroups-add-test-for-update",
            "name": "ValidationGroups: add test for update",
            "description": null
        },
        {
            "id": "validationgroups-add-create-group",
            "name": "ValidationGroups: add create group",
            "description": null
        },
        {
            "id": "dynamserialization-input-group-for-user-roles",
            "name": "DynamSerialization: input group for User.roles",
            "description": null
        },
        {
            "id": "dynamserialization-add-phonenumber",
            "name": "DynamSerialization: Add phoneNumber",
            "description": null
        },
        {
            "id": "dynamserialization-migration",
            "name": "DynamSerialization: migration",
            "description": null
        },
        {
            "id": "dynamserialization-groups-for-phonenumber",
            "name": "DynamSerialization: groups for phoneNumber",
            "description": null
        },
        {
            "id": "dynamserialization-add-test-for-phonenumber-admin-only",
            "name": "DynamSerialization: Add test for phoneNumber admin-only",
            "description": null
        },
        {
            "id": "dynamserialization-chnage-to-admin-read",
            "name": "DynamSerialization: chnage to admin:read",
            "description": null
        },
        {
            "id": "dynamserialization-copy-in-context-builder",
            "name": "DynamSerialization: Copy in context builder",
            "description": null
        },
        {
            "id": "dynamserialization-add-admin-groups",
            "name": "DynamSerialization: Add admin groups",
            "description": null
        },
        {
            "id": "dynamserialization-test-for-roles-update",
            "name": "DynamSerialization: test for roles update",
            "description": null
        },
        {
            "id": "dynamserialization-change-to-admin-write",
            "name": "DynamSerialization: Change to admin:write",
            "description": null
        },
        {
            "id": "dynamserialization-protect-roles",
            "name": "DynamSerialization: protect roles",
            "description": null
        },
        {
            "id": "autogroups-add-default-groups",
            "name": "AutoGroups: Add default groups",
            "description": null
        },
        {
            "id": "autogroups-empty-resource-factory",
            "name": "AutoGroups: empty resource factory",
            "description": null
        },
        {
            "id": "autogroups-with-resource-factory",
            "name": "AutoGroups: With resource factory",
            "description": null
        },
        {
            "id": "autogroups-remove-custom-groups",
            "name": "AutoGroups: remove custom groups",
            "description": null
        },
        {
            "id": "autogroups-correct-cheeses",
            "name": "AutoGroups: correct cheeses",
            "description": null
        },
        {
            "id": "autogroups-decorates-priority",
            "name": "AutoGroups: decorates priority",
            "description": null
        },
        {
            "id": "normalizer-make-usernormalizer",
            "name": "Normalizer: make UserNormalizer",
            "description": null
        },
        {
            "id": "normalizer-fill-in-dummy-logic",
            "name": "Normalizer: fill in dummy logic",
            "description": null
        },
        {
            "id": "normalizer-fix-missing-json-ld-fields",
            "name": "Normalizer: Fix missing JSON-LD fields",
            "description": null
        },
        {
            "id": "normalizer-fix-recursion",
            "name": "Normalizer: fix recursion",
            "description": null
        },
        {
            "id": "normalizer-return-false-cacheable",
            "name": "Normalizer: return false cacheable",
            "description": null
        },
        {
            "id": "normalizer-check-true-security",
            "name": "Normalizer: check true security",
            "description": null
        },
        {
            "id": "normalizer-fix-phonenumber-test",
            "name": "Normalizer: fix phoneNumber test",
            "description": null
        },
        {
            "id": "normalizer-add-isme-field",
            "name": "Normalizer: Add isMe field",
            "description": null
        },
        {
            "id": "acl-group-to-only-allow-cl-owner-on-post",
            "name": "ACL: group to only allow CL.owner on POST",
            "description": null
        },
        {
            "id": "acl-test-with-bad-cl-owner",
            "name": "ACL: test with bad CL.owner",
            "description": null
        },
        {
            "id": "acl-add-isvalidownervalidator",
            "name": "ACL: Add IsValidOwnerValidator",
            "description": null
        },
        {
            "id": "acl-fill-in-some-validator-logic",
            "name": "ACL: Fill in some validator logic",
            "description": null
        },
        {
            "id": "acl-finishing-validator",
            "name": "ACL: Finishing validator",
            "description": null
        },
        {
            "id": "acl-allow-admin-to-change",
            "name": "ACL: allow admin to change",
            "description": null
        },
        {
            "id": "acl-add-notblank-validation",
            "name": "ACL: add NotBlank validation",
            "description": null
        },
        {
            "id": "auto-owner-enhance-test",
            "name": "Auto-owner: enhance test",
            "description": null
        },
        {
            "id": "auto-owner-create-listener",
            "name": "Auto-owner: create listener",
            "description": null
        },
        {
            "id": "auto-owner-finish-logic",
            "name": "Auto-owner: finish logic",
            "description": null
        },
        {
            "id": "auto-owner-add-tag",
            "name": "Auto-owner: add tag",
            "description": null
        },
        {
            "id": "extension-test-get-cl-collection",
            "name": "Extension: test get CL collection",
            "description": null
        },
        {
            "id": "extension-change-test-for-published",
            "name": "Extension: change test for published",
            "description": null
        },
        {
            "id": "extension-empty-cheeselistingispublishedextension",
            "name": "Extension: Empty CheeseListingIsPublishedExtension",
            "description": null
        },
        {
            "id": "extension-add-ispublished-where",
            "name": "Extension: Add isPublished where",
            "description": null
        },
        {
            "id": "extension-add-admin-exception",
            "name": "Extension: Add admin exception",
            "description": null
        },
        {
            "id": "extension-test-for-single-item",
            "name": "Extension: test for single item",
            "description": null
        },
        {
            "id": "extension-assert-404-on-test",
            "name": "Extension: assert 404 on test",
            "description": null
        },
        {
            "id": "extension-add-extension-item-interface",
            "name": "Extension: add extension item interface",
            "description": null
        },
        {
            "id": "relation-add-failing-test",
            "name": "Relation: add failing test",
            "description": null
        },
        {
            "id": "relation-add-filtered-getter",
            "name": "Relation: add filtered getter",
            "description": null
        },
        {
            "id": "relation-fix-update-published-test",
            "name": "Relation: fix update published test",
            "description": null
        },
        {
            "id": "pre-ep3-bumping-php-version-and-re-org-deps",
            "name": "PRE_EP3: bumping php version and re-org deps",
            "description": null
        },
        {
            "id": "pre-ep3-unpacking-apip-pack",
            "name": "PRE_EP3: unpacking APIP pack",
            "description": null
        },
        {
            "id": "pre-ep3-unpacking-profiler-test-packs",
            "name": "PRE_EP3: unpacking profiler+test packs",
            "description": null
        },
        {
            "id": "pre-ep3-updating-deps-to-sf5",
            "name": "PRE_EP3: updating deps to Sf5",
            "description": null
        },
        {
            "id": "pre-ep3-updating-to-migrations-3",
            "name": "PRE_EP3: updating to Migrations 3",
            "description": null
        },
        {
            "id": "pre-ep3-updating-repositories",
            "name": "PRE_EP3: updating repositories",
            "description": null
        },
        {
            "id": "pre-ep3-api-platform-recipe",
            "name": "PRE_EP3: api-platform recipe",
            "description": null
        },
        {
            "id": "pre-ep3-annotations-recipe",
            "name": "PRE_EP3: annotations recipe",
            "description": null
        },
        {
            "id": "pre-ep3-doctrinebundle-recipe",
            "name": "PRE_EP3: DoctrineBundle recipe",
            "description": null
        },
        {
            "id": "pre-ep3-nelmio-cors-recipe",
            "name": "PRE_EP3: nelmio\/cors recipe",
            "description": null
        },
        {
            "id": "pre-ep3-flex-recipe",
            "name": "PRE_EP3: flex recipe",
            "description": null
        },
        {
            "id": "pre-ep3-frameworkbundle-recipe",
            "name": "PRE_EP3: frameworkbundle recipe",
            "description": null
        },
        {
            "id": "pre-ep3-symfony-console-recipe",
            "name": "PRE_EP3: symfony\/console recipe",
            "description": null
        },
        {
            "id": "pre-ep3-symfony-routing-recipe",
            "name": "PRE_EP3: symfony\/routing recipe",
            "description": null
        },
        {
            "id": "pre-ep3-monolog-recipe",
            "name": "PRE_EP3: monolog recipe",
            "description": null
        },
        {
            "id": "pre-ep3-phpunit-bridge-recipe",
            "name": "PRE_EP3: phpunit-bridge recipe",
            "description": null
        },
        {
            "id": "pre-ep3-security-recipe",
            "name": "PRE_EP3: security recipe",
            "description": null
        },
        {
            "id": "pre-ep3-translation-recipe",
            "name": "PRE_EP3: translation recipe",
            "description": null
        },
        {
            "id": "pre-ep3-twig-recipe",
            "name": "PRE_EP3: twig recipe",
            "description": null
        },
        {
            "id": "pre-ep3-validator-recipe",
            "name": "PRE_EP3: validator recipe",
            "description": null
        },
        {
            "id": "pre-ep3-encore-recipe",
            "name": "PRE_EP3: encore recipe",
            "description": null
        },
        {
            "id": "pre-ep3-upgrade-yarn-deps",
            "name": "PRE_EP3: upgrade yarn deps",
            "description": null
        },
        {
            "id": "pre-ep3-modernizing-vue-app",
            "name": "PRE_EP3: modernizing Vue app",
            "description": null
        },
        {
            "id": "pre-ep3-api-platform-security-changes",
            "name": "PRE_EP3: api platform security changes",
            "description": null
        },
        {
            "id": "pre-ep3-emptying-tutorial",
            "name": "PRE_EP3: emptying tutorial\/",
            "description": null
        },
        {
            "id": "pre-ep3-using-core-test-classes",
            "name": "PRE_EP3: using core test classes",
            "description": null
        },
        {
            "id": "pre-ep3-fixing-small-deprecation",
            "name": "PRE_EP3: fixing small deprecation",
            "description": null
        },
        {
            "id": "pre-ep3-removing-auto-group-factory",
            "name": "PRE_EP3: removing auto group factory",
            "description": null
        },
        {
            "id": "pre-ep3-add-docker-compose-yaml",
            "name": "PRE_EP3: add docker-compose.yaml",
            "description": null
        },
        {
            "id": "pre-ep3-commit-webpack-assets",
            "name": "PRE_EP3: commit webpack assets",
            "description": null
        },
        {
            "id": "pre-ep3-disabling-deprecations-in-tests",
            "name": "PRE_EP3: disabling deprecations in tests",
            "description": null
        },
        {
            "id": "pre-ep3-install-doctrine-fixtures",
            "name": "PRE_EP3: install doctrine fixtures",
            "description": null
        },
        {
            "id": "pre-ep3-add-fixtures",
            "name": "PRE_EP3: add fixtures",
            "description": null
        },
        {
            "id": "pre-ep3-auto-fill-login",
            "name": "PRE_EP3: auto-fill login",
            "description": null
        },
        {
            "id": "pre-ep3-remove-using-owner-read",
            "name": "PRE_EP3: remove using owner:read",
            "description": null
        },
        {
            "id": "pre-ep3-improve-cheeselisting-test",
            "name": "PRE_EP3: improve CheeseListing test",
            "description": null
        },
        {
            "id": "pre-ep3-fix-item-query-extension",
            "name": "PRE_EP3: fix item query extension",
            "description": null
        },
        {
            "id": "pre-ep3-fix-email-in-tests",
            "name": "PRE_EP3: fix email in tests",
            "description": null
        },
        {
            "id": "pre-ep3-add-isme-tests",
            "name": "PRE_EP3: add isMe tests",
            "description": null
        },
        {
            "id": "pre-ep3-install-foundry",
            "name": "PRE_EP3: install Foundry",
            "description": null
        },
        {
            "id": "pre-ep3-generate-factories",
            "name": "PRE_EP3: generate factories",
            "description": null
        },
        {
            "id": "pre-ep3-make-test-encoding-faster",
            "name": "PRE_EP3: make test encoding faster",
            "description": null
        },
        {
            "id": "pre-ep3-fill-in-factories",
            "name": "PRE_EP3: fill in factories",
            "description": null
        },
        {
            "id": "pre-ep3-use-foundry-in-tests",
            "name": "PRE_EP3: use Foundry in tests",
            "description": null
        },
        {
            "id": "pre-ep3-foundry-in-fixtures",
            "name": "PRE_EP3: Foundry in fixtures",
            "description": null
        },
        {
            "id": "pre-ep3-replace-alice-with-foundry",
            "name": "PRE_EP3: replace alice with Foundry",
            "description": null
        },
        {
            "id": "pre-ep3-add-cheesenotification-entity",
            "name": "PRE_EP3: add CheeseNotification entity",
            "description": null
        },
        {
            "id": "pre-ep3-factory-for-cheesenotification",
            "name": "PRE_EP3: factory for CheeseNotification",
            "description": null
        },
        {
            "id": "pre-ep3-adding-tutorial-fake-stats",
            "name": "PRE_EP3: adding tutorial fake stats",
            "description": null
        },
        {
            "id": "persisterdecoration-comment-out-persist",
            "name": "PersisterDecoration: comment out persist",
            "description": null
        },
        {
            "id": "persisterdecoration-re-add",
            "name": "PersisterDecoration: re-add",
            "description": null
        },
        {
            "id": "delete-me-1",
            "name": "delete me 1",
            "description": null
        },
        {
            "id": "persisterdecoration-inject-decorated",
            "name": "PersisterDecoration: inject decorated",
            "description": null
        },
        {
            "id": "persisterdecoration-add-service-config",
            "name": "PersisterDecoration: add service config",
            "description": null
        },
        {
            "id": "persisterdecoration-log-on-user-create",
            "name": "PersisterDecoration: log on user create",
            "description": null
        },
        {
            "id": "persisterdecoration-add-context-interface",
            "name": "PersisterDecoration: add context interface",
            "description": null
        },
        {
            "id": "persisterdecoration-dd-context",
            "name": "PersisterDecoration: dd($context)",
            "description": null
        },
        {
            "id": "persisterdecoration-remove-dd",
            "name": "PersisterDecoration: remove dd",
            "description": null
        },
        {
            "id": "statechangetest-bootstrap-test",
            "name": "StateChangeTest: bootstrap test",
            "description": null
        },
        {
            "id": "statechangetest-expose-ispublished-for-write",
            "name": "StateChangeTest: expose isPublished for write",
            "description": null
        },
        {
            "id": "statechangetest-test-for-notification",
            "name": "StateChangeTest: test for notification",
            "description": null
        },
        {
            "id": "statechangeaction-create-empty-persister",
            "name": "StateChangeAction: create empty persister",
            "description": null
        },
        {
            "id": "statechangeaction-inject-decorated",
            "name": "StateChangeAction: inject decorated",
            "description": null
        },
        {
            "id": "statechangeaction-call-decorated",
            "name": "StateChangeAction: call decorated",
            "description": null
        },
        {
            "id": "statechangeaction-add-phpdoc",
            "name": "StateChangeAction: add phpdoc",
            "description": null
        },
        {
            "id": "statechangeaction-check-if-ispublished",
            "name": "StateChangeAction: check if isPublished",
            "description": null
        },
        {
            "id": "statechangeaction-get-original-data",
            "name": "StateChangeAction: get original data",
            "description": null
        },
        {
            "id": "statechangeaction-insert-notification",
            "name": "StateChangeAction: insert notification",
            "description": null
        },
        {
            "id": "statechangeaction-check-originaldata",
            "name": "StateChangeAction: check originalData",
            "description": null
        },
        {
            "id": "delete-me-5",
            "name": "delete me 5",
            "description": null
        },
        {
            "id": "statevalidation-add-long-text",
            "name": "StateValidation: add long text",
            "description": null
        },
        {
            "id": "statevalidation-add-test",
            "name": "StateValidation: add test",
            "description": null
        },
        {
            "id": "statevalidation-generate-validator",
            "name": "StateValidation: generate validator",
            "description": null
        },
        {
            "id": "statevalidation-add-constraint",
            "name": "StateValidation: add constraint",
            "description": null
        },
        {
            "id": "statevalidation-allow-on-class",
            "name": "StateValidation: allow on class",
            "description": null
        },
        {
            "id": "statevalidation-dump-in-validator",
            "name": "StateValidation: dump in validator",
            "description": null
        },
        {
            "id": "statevalidation-dump-original-data",
            "name": "StateValidation: dump original data",
            "description": null
        },
        {
            "id": "statevalidation-do-nothing-if-no-change",
            "name": "StateValidation: do nothing if no change",
            "description": null
        },
        {
            "id": "statevalidation-do-not-allow-short-description",
            "name": "StateValidation: do not allow short description",
            "description": null
        },
        {
            "id": "statevalidation-allow-admins-to-publish",
            "name": "StateValidation: allow admins to publish",
            "description": null
        },
        {
            "id": "statevalidation-add-unpublish-logic",
            "name": "StateValidation: add unpublish logic",
            "description": null
        },
        {
            "id": "statevalidation-show-accessdeniedexception",
            "name": "StateValidation: show AccessDeniedException",
            "description": null
        },
        {
            "id": "statevalidation-comment-out-access-denied",
            "name": "StateValidation: comment out access denied",
            "description": null
        },
        {
            "id": "delete-me-3",
            "name": "delete me 3",
            "description": null
        },
        {
            "id": "userisme-remove-in-normalizer",
            "name": "UserIsMe: remove in normalizer",
            "description": null
        },
        {
            "id": "userisme-empty-data-provider",
            "name": "UserIsMe: empty data provider",
            "description": null
        },
        {
            "id": "userisme-fill-in-supports",
            "name": "UserIsMe: fill in supports()",
            "description": null
        },
        {
            "id": "userisme-return-all-users",
            "name": "UserIsMe: return all Users",
            "description": null
        },
        {
            "id": "userisme-decorate-collection-provider",
            "name": "UserIsMe: decorate collection provider",
            "description": null
        },
        {
            "id": "userisme-inject-specific-provider",
            "name": "UserIsMe: inject specific provider",
            "description": null
        },
        {
            "id": "userisme-add-isme-field",
            "name": "UserIsMe: add isMe field",
            "description": null
        },
        {
            "id": "userisme-add-phpdoc",
            "name": "UserIsMe: add phpdoc",
            "description": null
        },
        {
            "id": "userisme-exception-if-not-initialized",
            "name": "UserIsMe: exception if not initialized",
            "description": null
        },
        {
            "id": "userisme-dump-users",
            "name": "UserIsMe: dump $users",
            "description": null
        },
        {
            "id": "userisme-populate-the-field",
            "name": "UserIsMe: populate the field",
            "description": null
        },
        {
            "id": "userisme-populate-correctly",
            "name": "UserIsMe: populate correctly",
            "description": null
        },
        {
            "id": "userisme-add-response-status-code-check",
            "name": "UserIsMe: add response status code check",
            "description": null
        },
        {
            "id": "userisme-add-item-provider-interface",
            "name": "UserIsMe: add item provider interface",
            "description": null
        },
        {
            "id": "userisme-decorate-core-provider",
            "name": "UserIsMe: decorate core provider",
            "description": null
        },
        {
            "id": "userisme-populate-isme-in-item",
            "name": "UserIsMe: populate isMe in item",
            "description": null
        },
        {
            "id": "delete-me-7",
            "name": "delete me 7",
            "description": null
        },
        {
            "id": "userisme-populate-isme-in-data-persister",
            "name": "UserIsMe: populate isMe in data persister",
            "description": null
        },
        {
            "id": "ismelistener-comment-out-other-code",
            "name": "IsMeListener: comment-out other code",
            "description": null
        },
        {
            "id": "ismelistener-add-event-subscriber",
            "name": "IsMeListener: Add Event Subscriber",
            "description": null
        },
        {
            "id": "ismelistener-add-logic",
            "name": "IsMeListener: add logic",
            "description": null
        },
        {
            "id": "ismelistener-default-isme-to-false",
            "name": "IsMeListener: default isMe to false",
            "description": null
        },
        {
            "id": "ismelistener-dd-data-attributes",
            "name": "IsMeListener: dd data attributes",
            "description": null
        },
        {
            "id": "ismelistener-remove-dd",
            "name": "IsMeListener: remove dd",
            "description": null
        },
        {
            "id": "ismvplistener-add-field",
            "name": "IsMvpListener: add field",
            "description": null
        },
        {
            "id": "ismvplistener-rename-method",
            "name": "IsMvpListener: rename method",
            "description": null
        },
        {
            "id": "ismvplistener-update-test",
            "name": "IsMvpListener: update test",
            "description": null
        },
        {
            "id": "ismvplistener-add-listener",
            "name": "IsMvpListener: add listener",
            "description": null
        },
        {
            "id": "ismelistener-configure-lsitener",
            "name": "IsMeListener: configure lsitener",
            "description": null
        },
        {
            "id": "customresource-create-dailystats",
            "name": "CustomResource: Create DailyStats",
            "description": null
        },
        {
            "id": "customresource-customize-shortname",
            "name": "CustomResource: customize shortName",
            "description": null
        },
        {
            "id": "customresource-customize-namer-instead",
            "name": "CustomResource: customize namer instead",
            "description": null
        },
        {
            "id": "customresource-only-get-collection-op",
            "name": "CustomResource: only get collection op",
            "description": null
        },
        {
            "id": "customresource-empty-data-provider",
            "name": "CustomResource: empty data provider",
            "description": null
        },
        {
            "id": "customresource-return-dummy-dailystats",
            "name": "CustomResource: return dummy DailyStats",
            "description": null
        },
        {
            "id": "customresource-add-item-with-404",
            "name": "CustomResource: add item with 404",
            "description": null
        },
        {
            "id": "customresource-set-identifier-to-date",
            "name": "CustomResource: set identifier to date",
            "description": null
        },
        {
            "id": "customresource-add-getter-for-identifier",
            "name": "CustomResource: add getter for identifier",
            "description": null
        },
        {
            "id": "customresource-add-normalization-groups",
            "name": "CustomResource: add normalization groups",
            "description": null
        },
        {
            "id": "customresource-add-constructor",
            "name": "CustomResource: add constructor",
            "description": null
        },
        {
            "id": "customresource-description-on-prop",
            "name": "CustomResource: Description on prop",
            "description": null
        },
        {
            "id": "embeddednormalization-return-2-stats",
            "name": "EmbeddedNormalization: return 2 stats",
            "description": null
        },
        {
            "id": "embeddednormalization-return-some-listings",
            "name": "EmbeddedNormalization: return some listings",
            "description": null
        },
        {
            "id": "embeddednormalization-redo-listing-docs",
            "name": "EmbeddedNormalization: redo listing docs",
            "description": null
        },
        {
            "id": "embeddednormalization-help-my-editor",
            "name": "EmbeddedNormalization: help my editor",
            "description": null
        },
        {
            "id": "embeddednormalization-output-2x-cl-fields-on-user",
            "name": "EmbeddedNormalization: output 2x CL fields on User",
            "description": null
        },
        {
            "id": "embeddednormalization-advertise-return-type",
            "name": "EmbeddedNormalization: advertise return type",
            "description": null
        },
        {
            "id": "embeddednormalization-with-readablelink",
            "name": "EmbeddedNormalization: with readableLink",
            "description": null
        },
        {
            "id": "embeddednormalization-undo-everything",
            "name": "EmbeddedNormalization: undo everything",
            "description": null
        },
        {
            "id": "customitem-reactivate-get-item",
            "name": "CustomItem: reactivate get item",
            "description": null
        },
        {
            "id": "customitem-add-item-provider-interface",
            "name": "CustomItem: add item provider interface",
            "description": null
        },
        {
            "id": "customitem-refactor-provider",
            "name": "CustomItem: refactor provider",
            "description": null
        },
        {
            "id": "customitem-dump-id",
            "name": "CustomItem: dump id",
            "description": null
        },
        {
            "id": "customitem-finish-getitem",
            "name": "CustomItem: finish getItem()",
            "description": null
        },
        {
            "id": "pagination-create-dailystatspaginator",
            "name": "Pagination: create DailyStatsPaginator",
            "description": null
        },
        {
            "id": "pagination-fill-in-dummy-values",
            "name": "Pagination: fill in dummy values",
            "description": null
        },
        {
            "id": "pagination-return-paginator-object",
            "name": "Pagination: return paginator object",
            "description": null
        },
        {
            "id": "pagination-make-it-iterable",
            "name": "Pagination: make it iterable",
            "description": null
        },
        {
            "id": "pagination-update-count",
            "name": "Pagination: update count()",
            "description": null
        },
        {
            "id": "pagination-move-stats-loading-logic",
            "name": "Pagination: move stats loading logic",
            "description": null
        },
        {
            "id": "pagination-pass-current-max-per-page",
            "name": "Pagination: pass current & max per page",
            "description": null
        },
        {
            "id": "pagination-use-limit-offset-in-results",
            "name": "Pagination: use limit\/offset in results",
            "description": null
        },
        {
            "id": "pagination-pass-in-arguments",
            "name": "Pagination: pass in arguments",
            "description": null
        },
        {
            "id": "pagination-inject-pagination-object",
            "name": "Pagination: Inject Pagination object",
            "description": null
        },
        {
            "id": "pagination-limit-to-7-per-page",
            "name": "Pagination: limit to 7 per page",
            "description": null
        },
        {
            "id": "customput-add-put-operation",
            "name": "CustomPut: add put operation",
            "description": null
        },
        {
            "id": "customput-add-empty-data-persister",
            "name": "CustomPut: add empty data persister",
            "description": null
        },
        {
            "id": "customput-fill-in-supports",
            "name": "CustomPut: fill in supports()",
            "description": null
        },
        {
            "id": "customput-log-in-persist",
            "name": "CustomPut: log in persist",
            "description": null
        },
        {
            "id": "entityfilter-add-cheesesearchfilter",
            "name": "EntityFilter: Add CheeseSearchFilter",
            "description": null
        },
        {
            "id": "entityfilter-dump-in-getdescription",
            "name": "EntityFilter: dump in getDescription()",
            "description": null
        },
        {
            "id": "entityfilter-add-properties-option",
            "name": "EntityFilter: add properties option",
            "description": null
        },
        {
            "id": "entityfilter-remove-or",
            "name": "EntityFilter: remove or",
            "description": null
        },
        {
            "id": "entityfilter-add-documentation",
            "name": "EntityFilter: add documentation",
            "description": null
        },
        {
            "id": "entityfilter-add-openapi-description",
            "name": "EntityFilter: add openapi description",
            "description": null
        },
        {
            "id": "entityfilter-dump-property-and-value",
            "name": "EntityFilter: dump property and value",
            "description": null
        },
        {
            "id": "entityfilter-add-like-query",
            "name": "EntityFilter: add LIKE query",
            "description": null
        },
        {
            "id": "entityfilter-use-query-name-generator",
            "name": "EntityFilter: use query name generator",
            "description": null
        },
        {
            "id": "dtofilter-add-filter-class",
            "name": "DTOFilter: add filter class",
            "description": null
        },
        {
            "id": "dtofilter-fill-in-getdescription",
            "name": "DTOFilter: fill in getDescription",
            "description": null
        },
        {
            "id": "dtofilter-add-from-support-to-paginator",
            "name": "DTOFilter: add from support to paginator",
            "description": null
        },
        {
            "id": "dtofilter-pass-in-hardcoded-from",
            "name": "DTOFilter: pass in hardcoded from",
            "description": null
        },
        {
            "id": "dtofilter-dd-in-apply",
            "name": "DTOFilter: dd() in apply()",
            "description": null
        },
        {
            "id": "dtofilter-dump-from-query-param",
            "name": "DTOFilter: dump from query param",
            "description": null
        },
        {
            "id": "dtofilter-set-date-on-context",
            "name": "DTOFilter: set date on context",
            "description": null
        },
        {
            "id": "dtofilter-add-context-aware-to-provider",
            "name": "DTOFilter: add context aware to provider",
            "description": null
        },
        {
            "id": "dtofilter-set-from-in-data-provider",
            "name": "DTOFilter: set from in data provider",
            "description": null
        },
        {
            "id": "delete-me-6",
            "name": "delete me 6",
            "description": null
        },
        {
            "id": "delete-me-8",
            "name": "delete me 8",
            "description": null
        },
        {
            "id": "delete-me-9",
            "name": "delete me 9",
            "description": null
        },
        {
            "id": "delete-me-10",
            "name": "delete me 10",
            "description": null
        },
        {
            "id": "dtofilter-return-400-error",
            "name": "DTOFilter: return 400 error",
            "description": null
        },
        {
            "id": "dtooption-pass-throwoninvalid",
            "name": "DTOOption: pass throwOnInvalid",
            "description": null
        },
        {
            "id": "dtooption-add-throwoninvalid",
            "name": "DTOOption: add $throwOnInvalid",
            "description": null
        },
        {
            "id": "dtooption-inject-logger",
            "name": "DTOOption: inject logger",
            "description": null
        },
        {
            "id": "entityfilteroption-add-uselike-argument",
            "name": "EntityFilterOption: add useLike argument",
            "description": null
        },
        {
            "id": "entityfilteroption-override-constructor",
            "name": "EntityFilterOption: override constructor",
            "description": null
        },
        {
            "id": "entityfilteroption-simplify-constructor",
            "name": "EntityFilterOption: simplify constructor",
            "description": null
        },
        {
            "id": "entityfilteroption-add-uselike",
            "name": "EntityFilterOption: add useLike",
            "description": null
        },
        {
            "id": "dtooutput-create-basic-cheeselistingoutput",
            "name": "DTOOutput: Create basic CheeseListingOutput",
            "description": null
        },
        {
            "id": "dtooutput-add-output",
            "name": "DTOOutput: add output=",
            "description": null
        },
        {
            "id": "dtooutput-add-empty-transformer",
            "name": "DTOOutput: add empty transformer",
            "description": null
        },
        {
            "id": "dtooutput-dd-in-supports",
            "name": "DTOOutput: dd() in supports",
            "description": null
        },
        {
            "id": "dtooutput-add-supports",
            "name": "DTOOutput: add supports()",
            "description": null
        },
        {
            "id": "dtooutput-basic-transform",
            "name": "DTOOutput: basic transform()",
            "description": null
        },
        {
            "id": "dtooutput-give-field-groups",
            "name": "DTOOutput: give field @Groups",
            "description": null
        },
        {
            "id": "dtooutput-add-string-field-type",
            "name": "DTOOutput: add string field type",
            "description": null
        },
        {
            "id": "dtooutput-move-to-var",
            "name": "DTOOutput: move to @var",
            "description": null
        },
        {
            "id": "dtooutput-add-more-fields",
            "name": "DTOOutput: add more fields",
            "description": null
        },
        {
            "id": "dtooutput-copy-exposed-getter",
            "name": "DTOOutput: copy exposed getter",
            "description": null
        },
        {
            "id": "dtooutput-copy-other-method",
            "name": "DTOOutput: copy other method",
            "description": null
        },
        {
            "id": "dtooutput-add-createdat-field",
            "name": "DTOOutput: add createdAt field",
            "description": null
        },
        {
            "id": "dtoownerprop-add-owner",
            "name": "DTOOwnerProp: add owner",
            "description": null
        },
        {
            "id": "dtoownerprop-fix-usernormalizer",
            "name": "DTOOwnerProp: fix UserNormalizer",
            "description": null
        },
        {
            "id": "dtoownerprop-fix-test",
            "name": "DTOOwnerProp: fix test",
            "description": null
        },
        {
            "id": "dtonormalizeissue-add-readablelink",
            "name": "DTONormalizeIssue: add readableLink",
            "description": null
        },
        {
            "id": "dtonormalizeissue-remove-readablelink",
            "name": "DTONormalizeIssue: remove readableLink",
            "description": null
        },
        {
            "id": "dtonormalizeissue-add-user-read-groups",
            "name": "DTONormalizeIssue: add user:read groups",
            "description": null
        },
        {
            "id": "dtonormalizeissue-remove-extra-groups",
            "name": "DTONormalizeIssue: remove extra groups",
            "description": null
        },
        {
            "id": "dtonormalizeissue-re-add-readablelink",
            "name": "DTONormalizeIssue: re-add readableLink",
            "description": null
        },
        {
            "id": "dtoinput-create-class-with-props",
            "name": "DTOInput: create class with props",
            "description": null
        },
        {
            "id": "dtoinput-add-class",
            "name": "DTOInput: add class=",
            "description": null
        },
        {
            "id": "dtoinput-empty-transformer",
            "name": "DTOInput: empty transformer",
            "description": null
        },
        {
            "id": "dtoinput-dump-arguments",
            "name": "DTOInput: dump arguments",
            "description": null
        },
        {
            "id": "dtoinput-install-debug",
            "name": "DTOInput: install debug",
            "description": null
        },
        {
            "id": "dtoinput-fill-in-supports",
            "name": "DTOInput: fill in supports()",
            "description": null
        },
        {
            "id": "dtoinput-add-phpdoc",
            "name": "DTOInput: add phpdoc",
            "description": null
        },
        {
            "id": "dtoinput-add-var-user",
            "name": "DTOInput: add @var User",
            "description": null
        },
        {
            "id": "dtoinput-add-var-for-other-props",
            "name": "DTOInput: add @var for other props",
            "description": null
        },
        {
            "id": "dtoinput-complete-transform",
            "name": "DTOInput: complete transform()",
            "description": null
        },
        {
            "id": "dtoinput-make-it-work-for-updates",
            "name": "DTOInput: make it work for updates",
            "description": null
        },
        {
            "id": "dtoupdate-empty-denormalizer",
            "name": "DTOUpdate: empty denormalizer",
            "description": null
        },
        {
            "id": "dtoupdate-fill-in-supports",
            "name": "DTOUpdate: fill in supports()",
            "description": null
        },
        {
            "id": "dtoupdate-add-basic-dto-object-to-context",
            "name": "DTOUpdate: add basic DTO object to context",
            "description": null
        },
        {
            "id": "dtoupdate-inject-objectnormalizer",
            "name": "DTOUpdate: inject ObjectNormalizer",
            "description": null
        },
        {
            "id": "dtoupdate-remove-dump",
            "name": "DTOUpdate: remove dump",
            "description": null
        },
        {
            "id": "dtoupdate-paste-in-private-function",
            "name": "DTOUpdate: paste in private function",
            "description": null
        },
        {
            "id": "dtoupdate-use-private-method",
            "name": "DTOUpdate: use private method",
            "description": null
        },
        {
            "id": "dtoorg-add-input-createorupdateentity",
            "name": "DTOOrg: Add Input::createOrUpdateEntity()",
            "description": null
        },
        {
            "id": "dtoorg-add-input-createfromentity",
            "name": "DTOOrg: Add Input::createFromEntity()",
            "description": null
        },
        {
            "id": "dtoorg-add-createfrominputdto",
            "name": "DTOOrg: Add createFromInputDto",
            "description": null
        },
        {
            "id": "validation-cast-to-avoid-errors",
            "name": "Validation: cast to avoid errors",
            "description": null
        },
        {
            "id": "validation-undo-casting",
            "name": "Validation: undo casting",
            "description": null
        },
        {
            "id": "validation-move-constraints-to-input",
            "name": "Validation: move constraints to Input",
            "description": null
        },
        {
            "id": "validation-inject-validate",
            "name": "Validation: inject & validate",
            "description": null
        },
        {
            "id": "uuid-install-ramsey-uuid-doctrine",
            "name": "UUID: install ramsey\/uuid-doctrine",
            "description": null
        },
        {
            "id": "uuid-add-uuid-field",
            "name": "UUID: add uuid field",
            "description": null
        },
        {
            "id": "uuid-make-migration-safe",
            "name": "UUID: make migration safe",
            "description": null
        },
        {
            "id": "uuid-make-not-null",
            "name": "UUID: make not null",
            "description": null
        },
        {
            "id": "uuid-initialize-in-the-constructor",
            "name": "UUID: initialize in the constructor",
            "description": null
        },
        {
            "id": "uuid-fetch-user-in-test",
            "name": "UUID: fetch User in test",
            "description": null
        },
        {
            "id": "uuid-check-for-uuid-in-test",
            "name": "UUID: check for uuid in test",
            "description": null
        },
        {
            "id": "uuid-change-identifier",
            "name": "UUID: change identifier",
            "description": null
        },
        {
            "id": "uuid-use-uuid-in-all-tests",
            "name": "UUID: use UUID in all tests",
            "description": null
        },
        {
            "id": "uuid-add-test-to-set-on-create",
            "name": "UUID: add test to set on CREATE",
            "description": null
        },
        {
            "id": "uuid-expose-uuid-in-constructor",
            "name": "UUID: expose uuid in constructor",
            "description": null
        },
        {
            "id": "uuid-rename-to-id",
            "name": "UUID: rename to id",
            "description": null
        },
        {
            "id": "uuid-send-json-ld-content-type",
            "name": "UUID: send json-ld Content-Type",
            "description": null
        },
        {
            "id": "uuid-remove-header",
            "name": "UUID: remove header",
            "description": null
        },
        {
            "id": "uuid-remove-json-format",
            "name": "UUID: remove json format",
            "description": null
        },
        {
            "id": "uuid-re-add-json-format",
            "name": "UUID: re-add json format",
            "description": null
        }
    ],
    "sha": "bd4d83fe45eb7e54b6a8192822b5e04ef17e4865"
}