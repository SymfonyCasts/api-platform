diff --git a/src/DataProvider/DailyStatsPaginator.php b/src/DataProvider/DailyStatsPaginator.php
index 4bedca044..f16fa7c5f 100644
--- a/src/DataProvider/DailyStatsPaginator.php
+++ b/src/DataProvider/DailyStatsPaginator.php
@@ -3,10 +3,17 @@
 namespace App\DataProvider;
 
 use ApiPlatform\Core\DataProvider\PaginatorInterface;
+use App\Service\StatsHelper;
 
 class DailyStatsPaginator implements PaginatorInterface, \IteratorAggregate
 {
     private $dailyStatsIterator;
+    private $statsHelper;
+
+    public function __construct(StatsHelper $statsHelper)
+    {
+        $this->statsHelper = $statsHelper;
+    }
 
     public function getLastPage(): float
     {
@@ -36,8 +43,9 @@ class DailyStatsPaginator implements PaginatorInterface, \IteratorAggregate
     public function getIterator()
     {
         if ($this->dailyStatsIterator === null) {
-            // todo - actually go "load" the stats
-            $this->dailyStatsIterator = new \ArrayIterator([]);
+            $this->dailyStatsIterator = new \ArrayIterator(
+                $this->statsHelper->fetchMany()
+            );
         }
 
         return $this->dailyStatsIterator;
diff --git a/src/DataProvider/DailyStatsProvider.php b/src/DataProvider/DailyStatsProvider.php
index 62b9990ab..7c0c6582c 100644
--- a/src/DataProvider/DailyStatsProvider.php
+++ b/src/DataProvider/DailyStatsProvider.php
@@ -21,7 +21,7 @@ class DailyStatsProvider implements CollectionDataProviderInterface, ItemDataPro
 
     public function getCollection(string $resourceClass, string $operationName = null)
     {
-        return new DailyStatsPaginator();
+        return new DailyStatsPaginator($this->statsHelper);
     }
 
     public function getItem(string $resourceClass, $id, string $operationName = null, array $context = [])
