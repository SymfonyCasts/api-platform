diff --git a/src/Entity/CheeseListing.php b/src/Entity/CheeseListing.php
index b3a850d..b561e35 100644
--- a/src/Entity/CheeseListing.php
+++ b/src/Entity/CheeseListing.php
@@ -8,6 +8,7 @@ use ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\BooleanFilter;
 use ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\RangeFilter;
 use ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter;
 use ApiPlatform\Core\Serializer\Filter\PropertyFilter;
+use App\Validator\IsValidOwner;
 use Carbon\Carbon;
 use Doctrine\ORM\Mapping as ORM;
 use Symfony\Component\Serializer\Annotation\Groups;
@@ -96,6 +97,7 @@ class CheeseListing
      * @ORM\ManyToOne(targetEntity="App\Entity\User", inversedBy="cheeseListings")
      * @ORM\JoinColumn(nullable=false)
      * @Groups({"cheese:read", "cheese:collection:post"})
+     * @IsValidOwner()
      */
     private $owner;
 
diff --git a/src/Validator/IsValidOwner.php b/src/Validator/IsValidOwner.php
index 1374430..f003a37 100644
--- a/src/Validator/IsValidOwner.php
+++ b/src/Validator/IsValidOwner.php
@@ -13,5 +13,5 @@ class IsValidOwner extends Constraint
      * Any public properties become valid options for the annotation.
      * Then, use these in your validator class.
      */
-    public $message = 'The value "{{ value }}" is not valid.';
+    public $message = 'Cannot set owner to a different user';
 }
diff --git a/src/Validator/IsValidOwnerValidator.php b/src/Validator/IsValidOwnerValidator.php
index 153922f..71a121a 100644
--- a/src/Validator/IsValidOwnerValidator.php
+++ b/src/Validator/IsValidOwnerValidator.php
@@ -15,9 +15,7 @@ class IsValidOwnerValidator extends ConstraintValidator
             return;
         }
 
-        // TODO: implement the validation here
         $this->context->buildViolation($constraint->message)
-            ->setParameter('{{ value }}', $value)
             ->addViolation();
     }
 }
