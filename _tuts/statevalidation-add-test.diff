diff --git a/tests/Functional/CheeseListingResourceTest.php b/tests/Functional/CheeseListingResourceTest.php
index 5977a324f..24f17ac4e 100644
--- a/tests/Functional/CheeseListingResourceTest.php
+++ b/tests/Functional/CheeseListingResourceTest.php
@@ -93,6 +93,57 @@ class CheeseListingResourceTest extends CustomApiTestCase
         CheeseNotificationFactory::repository()->assertCount(1);
     }
 
+    public function testPublishCheeseListingValidation()
+    {
+        $client = self::createClient();
+        $user = UserFactory::new()->create();
+        $adminUser = UserFactory::new()->create(['roles' => ['ROLE_ADMIN']]);
+
+        $cheeseListing = CheeseListingFactory::new()
+            ->create(['owner' => $user, 'description' => 'short']);
+
+        // 1) the owner CANNOT publish with a short description
+        $this->logIn($client, $user);
+        $client->request('PUT', '/api/cheeses/'.$cheeseListing->getId(), [
+            'json' => ['isPublished' => true]
+        ]);
+        $this->assertResponseStatusCodeSame(400, 'description is too short');
+
+        // 2) an admin user CAN publish with a short description
+        $this->logIn($client, $adminUser);
+        $client->request('PUT', '/api/cheeses/'.$cheeseListing->getId(), [
+            'json' => ['isPublished' => true]
+        ]);
+        $this->assertResponseStatusCodeSame(200, 'admin CAN publish a short description');
+        $cheeseListing->refresh();
+        $this->assertTrue($cheeseListing->getIsPublished());
+
+        // 3) a normal user CAN make other changes to their listing
+        $this->logIn($client, $user);
+        $client->request('PUT', '/api/cheeses/'.$cheeseListing->getId(), [
+            'json' => ['price' => 12345]
+        ]);
+        $this->assertResponseStatusCodeSame(200, 'user can make other changes on short description');
+        $cheeseListing->refresh();
+        $this->assertSame(12345, $cheeseListing->getPrice());
+
+        // 4) a normal user CANNOT unpublish
+        $this->logIn($client, $user);
+        $client->request('PUT', '/api/cheeses/'.$cheeseListing->getId(), [
+            'json' => ['isPublished' => false]
+        ]);
+        $this->assertResponseStatusCodeSame(400, 'normal user cannot unpublish');
+
+        // 5) an admin user CAN unpublish
+        $this->logIn($client, $adminUser);
+        $client->request('PUT', '/api/cheeses/'.$cheeseListing->getId(), [
+            'json' => ['isPublished' => false]
+        ]);
+        $this->assertResponseStatusCodeSame(200, 'admin can unpublish');
+        $cheeseListing->refresh();
+        $this->assertFalse($cheeseListing->getIsPublished());
+    }
+
     public function testGetCheeseListingCollection()
     {
         $client = self::createClient();
