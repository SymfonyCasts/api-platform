diff --git a/src/DataTransformer/CheeseListingInputDataTransformer.php b/src/DataTransformer/CheeseListingInputDataTransformer.php
index 5f1d0d321..21fab55fa 100644
--- a/src/DataTransformer/CheeseListingInputDataTransformer.php
+++ b/src/DataTransformer/CheeseListingInputDataTransformer.php
@@ -14,6 +14,7 @@ class CheeseListingInputDataTransformer implements DataTransformerInterface
      */
     public function transform($input, string $to, array $context = [])
     {
+        dump($input);
         if (isset($context[AbstractItemNormalizer::OBJECT_TO_POPULATE])) {
             $cheeseListing = $context[AbstractItemNormalizer::OBJECT_TO_POPULATE];
         } else {
diff --git a/src/Serializer/Normalizer/CheeseListingInputDenormalizer.php b/src/Serializer/Normalizer/CheeseListingInputDenormalizer.php
index 0c35a4bde..2d57b42cc 100644
--- a/src/Serializer/Normalizer/CheeseListingInputDenormalizer.php
+++ b/src/Serializer/Normalizer/CheeseListingInputDenormalizer.php
@@ -3,6 +3,7 @@
 namespace App\Serializer\Normalizer;
 
 use App\Dto\CheeseListingInput;
+use Symfony\Component\Serializer\Normalizer\AbstractNormalizer;
 use Symfony\Component\Serializer\Normalizer\CacheableSupportsMethodInterface;
 use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
 
@@ -10,7 +11,10 @@ class CheeseListingInputDenormalizer implements DenormalizerInterface, Cacheable
 {
     public function denormalize($data, string $type, string $format = null, array $context = [])
     {
-        dump($context);
+        $dto = new CheeseListingInput();
+        $dto->title = 'I am set in the denormalizer!';
+
+        $context[AbstractNormalizer::OBJECT_TO_POPULATE] = $dto;
     }
 
     public function supportsDenormalization($data, string $type, string $format = null)
