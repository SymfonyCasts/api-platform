WEBVTT

00:00:01.066 --> 00:00:06.056 align:middle
Hora de la confesión: este tutorial trata
de mucho más que de la Plataforma API.

00:00:06.496 --> 00:00:10.856 align:middle
El mundo de las APIs ha sufrido
grandes cambios en los últimos años,

00:00:11.246 --> 00:00:16.956 align:middle
introduciendo nuevos formatos hipermedia, estándares,
especificaciones, herramientas de rendimiento y mucho más

00:00:17.586 --> 00:00:20.306 align:middle
La Plataforma API vive
justo en medio de todo esto:

00:00:20.536 --> 00:00:23.896 align:middle
aportando las mejores prácticas de
vanguardia directamente a tu aplicación.

00:00:24.676 --> 00:00:30.456 align:middle
Si realmente quieres dominar la Plataforma API,
tienes que entender el desarrollo moderno de las API.

00:00:31.106 --> 00:00:34.236 align:middle
Ya te he dicho que lo que
estamos viendo se llama Swagger.

00:00:34.846 --> 00:00:41.256 align:middle
Swagger es básicamente una interfaz de documentación
de la API, una especie de README interactivo.

00:00:41.876 --> 00:00:43.576 align:middle
Busca Swagger en Google y abre su sitio.

00:00:46.476 --> 00:00:50.396 align:middle
En la sección de herramientas, la que
estamos utilizando se llama Swagger UI.

00:00:51.626 --> 00:00:57.916 align:middle
¡Sí! Swagger UI permite que cualquiera pueda
visualizar e interactuar con los recursos de tu API

00:00:58.236 --> 00:01:01.986 align:middle
sin tener ninguna implementación en marcha.

00:01:02.736 --> 00:01:07.906 align:middle
Literalmente, podrías describir
primero tu API -qué rutas tendrá,

00:01:07.906 --> 00:01:12.056 align:middle
qué devolverá, qué campos
esperar- y luego utilizar Swagger UI

00:01:12.186 --> 00:01:18.636 align:middle
para visualizar tu futura API, antes de escribir
ni siquiera una línea de código para ella.

00:01:19.486 --> 00:01:25.106 align:middle
Deja que te muestre lo que quiero decir: tienen una demostración
en vivo que se parece mucho a nuestros documentos de la API.

00:01:26.156 --> 00:01:28.496 align:middle
¿Ves esa URL de swagger.json
en la parte superior?

00:01:29.236 --> 00:01:31.976 align:middle
Cópiala, abre una nueva pestaña y pégala.

00:01:33.036 --> 00:01:37.336 align:middle
¡Woh! ¡Es un enorme archivo
JSON que describe la API!

00:01:38.396 --> 00:01:43.086 align:middle
Así es como funciona Swagger
UI: lee este archivo JSON

00:01:43.086 --> 00:01:46.136 align:middle
y construye una interfaz
visual e interactiva para él.

00:01:46.826 --> 00:01:49.836 align:middle
Diablos, ¡es posible que
esta API ni siquiera exista!

00:01:50.886 --> 00:01:55.426 align:middle
Siempre que tengas este archivo de
descripción JSON, puedes utilizar Swagger UI.

00:01:56.636 --> 00:02:00.776 align:middle
El archivo JSON contiene todas tus rutas,
una descripción de lo que hace cada una,

00:02:01.136 --> 00:02:06.506 align:middle
los parámetros de la entrada, qué salida
esperar, detalles relacionados con la seguridad...

00:02:06.916 --> 00:02:10.046 align:middle
básicamente trata de
describir completamente tu API.

00:02:11.066 --> 00:02:16.586 align:middle
Así que si tienes uno de estos archivos de
configuración JSON, puedes conectarlo a Swagger UI y...

00:02:16.826 --> 00:02:20.276 align:middle
¡boom! Obtendrás una
interfaz rica y descriptiva.

00:02:21.386 --> 00:02:24.156 align:middle
El formato de este archivo se llama OpenAPI.

00:02:24.866 --> 00:02:31.496 align:middle
Así pues, Swagger UI es la interfaz y entiende
esta especie de formato oficial de especificaciones

00:02:31.496 --> 00:02:34.306 align:middle
para describir APIs llamado OpenAPI.

00:02:35.676 --> 00:02:41.556 align:middle
Para hacer las cosas un poco más confusas, la
especificación OpenAPI solía llamarse Swagger.

00:02:42.086 --> 00:02:48.376 align:middle
A partir de OpenAPI 3.0, se llama
OpenAPI y Swagger es sólo la interfaz.

00:02:49.116 --> 00:02:52.246 align:middle
¡Uf! De todos modos, todo
esto está muy bien...

00:02:52.246 --> 00:02:57.066 align:middle
pero crear una API ya es suficiente
trabajo, sin necesidad de intentar construir

00:02:57.066 --> 00:03:00.056 align:middle
y mantener este gigantesco
documento JSON al margen.

00:03:00.446 --> 00:03:03.666 align:middle
Por eso la Plataforma API lo hace por ti.

00:03:04.456 --> 00:03:09.676 align:middle
Recuerda: La filosofía de la Plataforma
API es la siguiente: crea algunos recursos,

00:03:10.176 --> 00:03:14.016 align:middle
modifica cualquier configuración que necesites
-no lo hemos hecho, pero lo haremos pronto-

00:03:14.406 --> 00:03:18.876 align:middle
y deja que la Plataforma API
exponga esos recursos como una API.

00:03:19.936 --> 00:03:26.836 align:middle
Eso es lo que hace, pero para ser un buen amigo
más, también crea una especificación OpenAPI.

00:03:28.886 --> 00:03:32.706 align:middle
Compruébalo: ve a /api/docs.json.

00:03:34.106 --> 00:03:37.076 align:middle
¡Hola documento gigante de
la especificación OpenAPI!

00:03:39.906 --> 00:03:42.626 align:middle
Fíjate en que dice swagger: "2.0".

00:03:43.636 --> 00:03:50.236 align:middle
La versión 3 de OpenAPI es todavía bastante nueva, así
que la Plataforma API 2 sigue utilizando el formato antiguo.

00:03:51.226 --> 00:03:56.596 align:middle
Añade ?spec_version=3 a la URL para ver...

00:03:57.006 --> 00:04:00.866 align:middle
¡sí! Este es el mismo documento
en la última versión del formato.

00:04:04.706 --> 00:04:08.736 align:middle
Ahora, vuelve a nuestra página de inicio del
documento de la API y ve el código fuente HTML.

00:04:10.146 --> 00:04:15.176 align:middle
¡Ja! ¡ Los datos JSON de
OpenAPI ya se están incluyendo

00:04:15.176 --> 00:04:18.476 align:middle
en esta página a través de una
pequeña etiqueta de script swagger-data!

00:04:18.976 --> 00:04:20.986 align:middle
¡Así es como funciona esta página!

00:04:21.946 --> 00:04:29.236 align:middle
Para generar la Swagger UI de la versión 3 de OpenAPI,
puedes añadir el mismo ?spec_version=3 a la URL.

00:04:31.936 --> 00:04:35.296 align:middle
Sí, puedes ver la etiqueta OAS3.

00:04:35.956 --> 00:04:40.666 align:middle
Esto no cambia mucho en el frontend,
pero hay unos cuantos datos nuevos

00:04:40.736 --> 00:04:44.076 align:middle
que Swagger puede utilizar ahora gracias a
la nueva versión de las especificaciones.

00:04:44.856 --> 00:04:50.566 align:middle
Pero... aparte del hecho de que nos proporciona esta bonita
interfaz de usuario de Swagger, ¿por qué debería importarnos

00:04:50.566 --> 00:04:55.346 align:middle
que se esté creando una gigantesca
especificación JSON de OpenAPI entre bastidores?

00:04:56.576 --> 00:05:01.706 align:middle
Volviendo al sitio de Swagger, una de las
otras herramientas se llama Swagger CodeGen:

00:05:01.706 --> 00:05:07.666 align:middle
una herramienta para crear un SDK
para tu API en casi cualquier lenguaje

00:05:08.276 --> 00:05:13.656 align:middle
Piénsalo: si tu API está completamente documentada
en un lenguaje comprensible para la máquina, ¿no

00:05:13.946 --> 00:05:16.506 align:middle
deberíamos poder generar
una biblioteca JavaScript

00:05:16.506 --> 00:05:20.796 align:middle
o PHP personalizada para hablar con tu API?

00:05:21.616 --> 00:05:23.026 align:middle
¡Es totalmente posible!

00:05:24.476 --> 00:05:28.786 align:middle
Lo último que quiero señalar es que,
además de los puntos finales, o "rutas",

00:05:29.286 --> 00:05:33.606 align:middle
la especificación OpenAPI también
tiene información sobre los "modelos".

00:05:35.776 --> 00:05:41.336 align:middle
En la especificación JSON, desplázate hasta
el final: describe nuestro modelo CheeseListing

00:05:41.336 --> 00:05:45.376 align:middle
y los campos que hay que esperar
al enviar y recibir este modelo.

00:05:46.906 --> 00:05:48.776 align:middle
Puedes ver esta misma información en Swagger.

00:05:48.776 --> 00:05:56.306 align:middle
Y ¡oh! De alguna manera ya sabe que
el id es un integer y que es readonly.

00:05:58.176 --> 00:06:03.936 align:middle
También sabe que el precio es un integer y que
createdAt es una cadena con formato datetime.

00:06:04.436 --> 00:06:05.456 align:middle
¡Eso es increíble!

00:06:06.476 --> 00:06:09.676 align:middle
La Plataforma API lee esa información
directamente de nuestro código,

00:06:10.026 --> 00:06:15.336 align:middle
lo que significa que nuestros documentos de la API se
mantienen actualizados sin que tengamos que pensar en ello.

00:06:16.466 --> 00:06:18.846 align:middle
Aprenderemos más sobre cómo
funciona esto a lo largo del camino.

00:06:19.246 --> 00:06:23.226 align:middle
Pero antes de llegar ahí, tenemos que
hablar de otra cosa súper importante

00:06:23.226 --> 00:06:26.506 align:middle
que ya estamos viendo: el formato JSON-LD

00:06:26.506 --> 00:06:30.846 align:middle
e Hydra que devuelven las
respuestas de nuestra API
